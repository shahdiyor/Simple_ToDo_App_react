{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shahdiyor\\\\RP_LAB_1\\\\src\\\\screen\\\\TodoScreen.js\";\n\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ViewBase } from \"react-native-web/dist/index\";\nimport { AppCard } from \"../components/ui/AppCart\";\nimport { EditModal } from \"../components/EditModal\";\nexport var TodoScreen = function TodoScreen(_ref) {\n  var goBack = _ref.goBack,\n      todo = _ref.todo,\n      onRemove = _ref.onRemove;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var saveHandler = function saveHandler(title) {\n    onSave(todos.id, title);\n    setModal(false);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(EditModal, {\n    onSave: saveHandler,\n    value: todo.title,\n    visible: modal,\n    onCancel: goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), React.createElement(AppCard, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, todo.title), React.createElement(Button, {\n    title: \"\\u0420\\u0435\\u0434.\",\n    onPress: function onPress() {\n      return setModal(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"\\u041D\\u0430\\u0437\\u0430\\u0434\",\n    color: \"#757575\",\n    onPress: goBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n    color: \"#e53935\",\n    onPress: function onPress() {\n      return onRemove(todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }))));\n};\nvar styles = StyleSheet.create({\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  card: {\n    marginBottom: 20,\n    padding: 15\n  },\n  button: {\n    width: \"40%\"\n  },\n  title: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/shahdiyor/RP_LAB_1/src/screen/TodoScreen.js"],"names":["React","useState","ViewBase","AppCard","EditModal","TodoScreen","goBack","todo","onRemove","modal","setModal","saveHandler","title","onSave","todos","id","styles","card","buttons","button","StyleSheet","create","flexDirection","justifyContent","marginBottom","padding","width","fontSize"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;SACwCC,Q;AACxC,SAAQC,OAAR;AACA,SAAQC,SAAR;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA8B;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBAE3BP,QAAQ,CAAC,KAAD,CAFmB;AAAA;AAAA,MAE7CQ,KAF6C;AAAA,MAEvCC,QAFuC;;AAIpD,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3BC,IAAAA,MAAM,CAACC,KAAK,CAACC,EAAP,EAAUH,KAAV,CAAN;AACAF,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,GAHD;;AAKA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAIC,WAArB;AAAkC,IAAA,KAAK,EAAIJ,IAAI,CAACK,KAAhD;AAAuD,IAAA,OAAO,EAAIH,KAAlE;AAAyE,IAAA,QAAQ,EAAIH,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAIU,MAAM,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BL,IAAI,CAACK,KAAnC,CADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,qBAAhB;AAAuB,IAAA,OAAO,EAAI;AAAA,aAAMF,QAAQ,CAAC,IAAD,CAAd;AAAA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIM,MAAM,CAACE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIF,MAAM,CAACG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,gCAAhB;AAAwB,IAAA,KAAK,EAAG,SAAhC;AAA0C,IAAA,OAAO,EAAIb,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIU,MAAM,CAACG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAG,4CADZ;AAEI,IAAA,KAAK,EAAG,SAFZ;AAGI,IAAA,OAAO,EAAI;AAAA,aAAMX,QAAQ,CAACD,IAAI,CAACQ,EAAN,CAAd;AAAA,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CANJ,CADJ;AAqBH,CA9BM;AAgCP,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,OAAO,EAAE;AACLI,IAAAA,aAAa,EAAE,KADV;AAELC,IAAAA,cAAc,EAAE;AAFX,GADoB;AAK7BN,EAAAA,IAAI,EAAE;AACFO,IAAAA,YAAY,EAAE,EADZ;AAEFC,IAAAA,OAAO,EAAE;AAFP,GALuB;AAS7BN,EAAAA,MAAM,EAAE;AACJO,IAAAA,KAAK,EAAC;AADF,GATqB;AAY7Bd,EAAAA,KAAK,EAAE;AACHe,IAAAA,QAAQ,EAAC;AADN;AAZsB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport {StyleSheet, View, Text, Button, ViewBase} from \"react-native\";\r\nimport {AppCard} from \"../components/ui/AppCart\";\r\nimport {EditModal} from \"../components/EditModal\";\r\n\r\nexport const TodoScreen = ({goBack, todo, onRemove}) => {\r\n\r\n    const [modal,setModal] = useState(false);\r\n\r\n    const saveHandler = (title) => {\r\n        onSave(todos.id,title);\r\n        setModal(false);\r\n    }\r\n\r\n    return(\r\n        <View>\r\n            <EditModal onSave = {saveHandler} value = {todo.title} visible = {modal} onCancel = {goBack}/>\r\n            <AppCard style = {styles.card}>\r\n                <Text style = {styles.title}>{todo.title}</Text>\r\n                <Button title = \"Ред.\" onPress = {() => setModal(true)}/>\r\n            </AppCard>\r\n            <View style = {styles.buttons}>\r\n                <View style = {styles.button}>\r\n                    <Button title = \"Назад\" color = \"#757575\" onPress = {goBack}/>\r\n                </View>\r\n                <View style = {styles.button}>\r\n                    <Button\r\n                        title = \"Удалить\"\r\n                        color = \"#e53935\"\r\n                        onPress = {() => onRemove(todo.id)}\r\n                    />\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    buttons: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between'\r\n    },\r\n    card: {\r\n        marginBottom: 20,\r\n        padding: 15\r\n    },\r\n    button: {\r\n        width:\"40%\"\r\n    },\r\n    title: {\r\n        fontSize:20\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}